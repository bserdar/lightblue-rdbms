{
    "copyright": [
        "Copyright 2013 Red Hat, Inc. and/or its affiliates.",
        "This file is part of lightblue.",
        "This program is free software: you can redistribute it and/or modify",
        "it under the terms of the GNU General Public License as published by",
        "the Free Software Foundation, either version 3 of the License, or",
        "(at your option) any later version.",
        "This program is distributed in the hope that it will be useful,",
        "but WITHOUT ANY WARRANTY; without even the implied warranty of",
        "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the",
        "GNU General Public License for more details.",
        "You should have received a copy of the GNU General Public License",
        "along with this program.  If not, see <http://www.gnu.org/licenses/>."],
    "id": "#conditional",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "properties": {
      "$or": {
        "description": "Match any",
        "type": "array",
        "minItems": 1,
        "items": {
          "anyOf": [{
            "$ref": "#/properties/$or"
          }, {
            "$ref": "#/properties/$any"
          }, {
            "$ref": "#/properties/$and"
          }, {
            "$ref": "#/properties/$all"
          }, {
            "$ref": "#/properties/$not"
          }, {
            "$ref": "#/properties/path-empty"
          }, {
            "$ref": "#/properties/path-check-path"
          }, {
            "$ref": "#/properties/path-check-value"
          }, {
            "$ref": "#/properties/path-check-values"
          }, {
            "$ref": "#/properties/path-regex"
          }]
        }
      },
      "path-empty" : {
        "type": "object",
        "properties": {
          "conditional": {
            "enum": ["$isempty"]
          },
          "path1": {
            "type": "string"
          }
        }
      },
      "path-check-path" : {
        "type": "object",
        "properties": {
          "conditional": {
            "enum": ["$greaterThan", "$lessThan", "$equalTo", "$notEqualTo", "$greaterThanOrEqualTo", "$lessThanOrEqualTo", "$in", "$notIn", "$contains"]
          },
          "path1": {
            "type": "string"
          },
          "path2": {
            "type": "string"
          }
        }
      },
      "path-check-value" : {
        "type": "object",
        "properties": {
          "conditional": {
            "enum": ["$greaterThan", "$lessThan", "$equalTo", "$notEqualTo", "$greaterThanOrEqualTo", "$lessThanOrEqualTo", "$in", "$notIn", "$contains"]
          },
          "path1": {
            "type": "string"
          },
          "value2": {
            "type": "string"
          }
        }
      },
      "path-check-values" : {
        "type": "object",
        "properties": {
          "conditional": {
            "enum": ["$greaterThan", "$lessThan", "$equalTo", "$notEqualTo", "$greaterThanOrEqualTo", "$lessThanOrEqualTo", "$in", "$notIn", "$contains"]
          },
          "path1": {
            "type": "string"
          },
          "values2": {
            "type": "array",
            "minItems": 1,
            "items": {
              "type": "string"
            },
            "uniqueItems": true
          }
        }
      },
      "path-regex" : {
        "type": "object",
        "properties": {
          "path": {
            "type": "string"
          },
          "regex": {
            "type": "string",
            "format": "regex"
          },
          "case_insensitive": {
            "type": "boolean"
          },
          "multiline": {
            "type": "boolean"
          },
          "extended": {
            "type": "boolean"
          },
          "dotall": {
            "type": "boolean"
          }
        }
      },
    "$any": {
        "$ref": "#/properties/$or"
    },
    "$and": {
        "description": "Match all",
        "type": "array",
        "minItems": 1,
        "items": {
          "anyOf": [{
            "$ref": "#/properties/$or"
          }, {
            "$ref": "#/properties/$any"
          }, {
            "$ref": "#/properties/$and"
          }, {
            "$ref": "#/properties/$all"
          }, {
            "$ref": "#/properties/$not"
          }, {
            "$ref": "#/properties/path-empty"
          }, {
            "$ref": "#/properties/path-check-path"
          }, {
            "$ref": "#/properties/path-check-value"
          }, {
            "$ref": "#/properties/path-check-values"
          }, {
            "$ref": "#/properties/path-regex"
          }]
        }
    },
    "$all": {
        "$ref": "#/properties/$and"
    },
    "$not": {
        "description": "Charge the evaluation from true to false vice versa",
        "type": "object",
        "properties": {
          "anyOf": [{
            "$ref": "#/properties/$or"
          }, {
            "$ref": "#/properties/$any"
          }, {
            "$ref": "#/properties/$and"
          }, {
            "$ref": "#/properties/$all"
          }, {
            "$ref": "#/properties/$not"
          }, {
            "$ref": "#/properties/path-empty"
          }, {
            "$ref": "#/properties/path-check-path"
          }, {
            "$ref": "#/properties/path-check-value"
          }, {
            "$ref": "#/properties/path-check-values"
          }, {
            "$ref": "#/properties/path-regex"
          }]
        }
    }
  },
  "required": [
  ],
  "additionalProperties": false
}